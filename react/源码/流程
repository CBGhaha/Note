1：组件初始化 
2: 组件渲染
3: 组件setState更新->重新render本组件 对比组件类型是否一直
4: 递归深度遍历组件，重新render并diff，将需要修改的dom标记加入队列批量处理  将render后的生命周期加入队列

react的组件在初始化时就以树结构表现 
children和组件组成可一个组件树

这个组件树用递归的方式遍历 在初始化时(生产dom片段 并插入))和setState时（重新render diff 批量插入修改 执行生命周期）
在fiber架构中 这种树结构被修改，每个react组件有：
    type:类型
    ...
    return:指向父节点
    child:指向第一个子节点
    sibling:指向第一个兄弟节点

这就像一个链表 可向下前进和向上溯。如此，整个遍历就可以打断和继续变成了一个遍历
每个执行单元在执行后返回下一个执行单元 即下一个组件实例


