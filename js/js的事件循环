js分为同步任务和异步任务
同步任务在主线程上执行，在同步任务执行完后，主线程不断的循环往复的从任务队列中读取可执行的异步任务，这种机制称为事件循环。

任务队列可以有多个，一个任务队列是多个有序的任务集合 每种相同异步api制造的异步任务在同一个任务队列中。比如Timeout和Promise

但是任务队列中的任务类型分为宏任务和微任务
宏任务包括：script(整体代码)、setTimeout、setInterval、I/O、UI交互事件、postMessage、MessageChannel、setImmediate(Node.js 环境)
微任务包括：Promise.then、MutaionObserver、process.nextTick(Node.js 环境)

宏任务和微任务的区别 ：宏任务执行完毕之后立即执行微任务中可执行的微任务 然后下执行下一个宏任务之前需要检查渲染 然后GUI线程接管渲染 渲染完毕之后执行下一个宏任务
(js语言设定js引擎与GUI引擎是互斥的,也就是说GUI引擎在渲染时会阻塞js引擎计算.原因很简单,如果在GUI渲染的时候,js改变了dom,那么就会造成渲染不同步)
所以同时可执行的Timeout和promise.then promise会先一步执行
